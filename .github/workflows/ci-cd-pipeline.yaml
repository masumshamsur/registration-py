name: CI/CD Pipeline
on:
    workflow_dispatch:
    push:
        branches:
            - develop
env: 
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    FRONTEND_IMAGE_NAME: user-registration-frontend
    BACKEND_IMAGE_NAME: user-registration-backend
jobs:            
   build-and-push:
    name: Build and Push Docker Images
    runs-on : ubuntu-latest
    strategy:
        matrix:
            service: [frontend, backend]

    # Add PostgreSQL service for all jobs
    services:
        postgres:
          image: postgres:13
          ports:
            - 5432:5432
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: users_db
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

    steps:
        # Conditionally start PostgreSQL service for backend
        - name: Start PostgreSQL (backend only)
          if: ${{ matrix.service == 'backend' }}
          run: echo "PostgreSQL service is enabled for backend"
          

        # Checkout the repository
        - name: Checkout Code
          uses: actions/checkout@v4

        # Set up Python
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.10'

        # Install dependencies
        - name: Install dependencies
          run: |
            pip install -r ${{ matrix.service }}/requirements.txt

        # run tests
        - name: Run tests
          run: |
            export PYTHONPATH=$PYTHONPATH:$(pwd)
            if [ "${{ matrix.service }}" == "backend" ]; then
               pytest backend/tests/
            elif [ "${{ matrix.service }}" == "frontend" ]; then
               pytest frontend/tests/
            fi 