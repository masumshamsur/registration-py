name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - develop

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  FRONTEND_IMAGE_NAME: registration-frontend
  BACKEND_IMAGE_NAME: registration-backend

jobs:
  frontend:
    runs-on: ubuntu-latest
    name: Frontend - Build, Test, and Push

    steps:
        # Checkout Repository
      - name: Checkout Code
        uses: actions/checkout@v4
      
        # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

        # Cache Python dependencies
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('frontend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

        # Install dependencies
      - name: Install dependencies
        run: pip install -r frontend/requirements.txt

        # Run frontend tests
      - name: Run frontend tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          mkdir -p frontend/test-results
          pytest frontend/tests/ --junitxml=frontend/test-results/results.xml

        # Archive frontend test results
      - name: Archive frontend test results
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-results
          path: frontend/test-results/results.xml

        # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

        # Build and push frontend Docker image
      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ github.run_number }}

        # Update Helm values.yaml for frontend
      - name: Update Helm values.yaml for Frontend
        run: |
          sed -i "s|repository:.*|repository: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.FRONTEND_IMAGE_NAME }}|" registration-py-chart-all-togather/values.yaml
          sed -i "s|tag:.*|tag: ${{ github.run_number }}|" registration-py-chart-all-togather/values.yaml

      # Print the updated values.yaml file
      - name: Print Updated values.yaml
        run: cat registration-py-chart-all-togather/values.yaml    


  backend:
    runs-on: ubuntu-latest
    name: Backend - Build, Test, and Push

    # Define services
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: myUser
          POSTGRES_PASSWORD: myPass
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
        # Checkout Repository
      - name: Checkout Code
        uses: actions/checkout@v4

        # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

        # Cache Python dependencies
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

        # Install dependencies
      - name: Install dependencies
        run: pip install -r backend/requirements.txt

        # Run backend tests
      - name: Run backend tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/backend/src
          mkdir -p backend/test-results
          pytest backend/tests/ --junitxml=backend/test-results/results.xml

        # Archive backend test results
      - name: Archive backend test results
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: backend/test-results/results.xml

        # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

        # Build and push backend Docker image
      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.run_number }}

        # Update Helm values.yaml for backend
      - name: Update Helm values.yaml for Backend
        run: |
          sed -i "s|repository:.*|repository: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BACKEND_IMAGE_NAME }}|" registration-py-chart-all-togather/values.yaml
          sed -i "s|tag:.*|tag: ${{ github.run_number }}|" registration-py-chart-all-togather/values.yaml
          
      # Print the updated values.yaml file
      - name: Print Updated values.yaml
        run: cat registration-py-chart-all-togather/values.yaml    